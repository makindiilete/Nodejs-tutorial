/*When you create a document in mongodb, you will notice that mongodb set an objectID with a string of 24characters to that document.

This ID contains 12bytes :
    The first 4bytes represents the timestamp which is when the document was created so we dont need to set a different property like "createdAt" to show when the document was created and also we can sort these documents based on their creation time using their ID property
    The next 3bytes represents machine identifier
    The next 2 bytes represents process identifier
    The next 3 bytes represents a counter...


1 byte = 8 bits
2 ^ 8 = 256
2 ^ 24 = 16M

ObjectID(s) are generated by mongodb driver
*/

//GENERATING ID EXPLICITLY BY YOURSELF
const mongoose = require("mongoose");
const id = new mongoose.Types.ObjectId();
console.log(id);

//RESULT: - 5d0769889ab6fc31480c50f4

//GENERATING AN OBJECT ID TIMESTAMP
const mongoose = require("mongoose");
const id = new mongoose.Types.ObjectId();
console.log(id.getTimestamp());

//RESULT: - 2019-06-17T10:22:19.000Z

//VALIDATING OBJECT ID
const mongoose = require("mongoose");
const id = new mongoose.Types.ObjectId();
console.log(id.getTimestamp());

//validating an object id: '1234' is the id we are testing
const isValid = mongoose.Types.ObjectId.isValid("1234");
console.log(isValid);
